
Je veux développer un pipeline de RAG, pour faire de la genAI.

J'ai déjà produit des chunks à partir d'un document et j'ai calculé leurs embeddings, que j'ai envoyés dans ma base Weaviate locale.
Je dois maintenant faire une recherche via Weaviate.

Les embeddings, avant d'être envoyés dans Weaviate, étaient au format suivant :
{ chunk_id, embedding: [floats], model: {name, version}, created_at, approx_tokens, keywords, headings }

Voici un exemple d'une ligne de ce fichier :
{"chunk_id": "CCTP.docx-2322", "embedding": [0.19614559412002563, -0.016328079625964165, 0.21465414762496948, 0.29702073335647583, ...], "model": {"name": "paraphrase-xlm-r-multilingual-v1", "version": "5.1.0"}, "created_at": "2025-08-15T16:54:50Z", "approx_tokens": 13, "keywords": ["supervision", "technique", "applicative", "partagée", "accessible"], "headings": {"h1": "Prestations adressées par l’accord-cadre", "h2": "P1.2 - Rep : Reprise de l’existant", "h3": "Objet"}}

Les metadata de contexte qui sont dans ce fichier comprennent :
  - les mots clés importants du chunk correspondant, placés dans le tableau keywords.
  - les différents niveaux de titres du chunk correspondant, placés dans le tableau headings.
 
Je veux désormais un script qui fait une requête sur ces embeddings, pour récupérer les chunks les plus proches.

Il récupère 50 chunks, à moins qu'une option de ligne de commande lui indique un autre nombre de chunks à récupérer.

Il affiche les résultats sur la sortie standard.

------------------------------------------------------------

Avec l'option "-l" suivie d'un numéro indiquant le niveau de titre, la recherche ne se fait plus sur le texte mais sur les titres de ce niveau.

------------------------------------------------------------

Le nom de la collection est configurable comme dans les autres scripts, avec la même valeur par défaut que dans les autres scripts.

------------------------------------------------------------

Supprime l'option -l et son traitement, ça ne sert plus à rien.

------------------------------------------------------------

{
      "chunk_id": "...",
      "text": "...",
      "embedding": [floats],
      "model": {"name": "...", "version": "..."},
      "created_at": "YYYY-MM-DDTHH:MM:SSZ",
      "approx_tokens": 123,
      "keywords": ["...", ...],
      "headings": {"h1": "...", "h2": "...", ...}
    }

------------------------------------------------------------

src/pipeline-advanced/create_embeddings.py src/pipeline-advanced/search_chunks.py src/pipeline-advanced/update_weaviate.py

En plus des propriétés comme chunk_id, text, headings, etc., fait en sorte de traiter les propriétés full_headings et heading, quand elles ne le sont pas.
Ces propriétés, au même niveau que chunk_id, text et headings, par ex., doivent être consommées et produites systématiquement.
