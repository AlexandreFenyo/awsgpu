
Je veux développer un pipeline de RAG, pour faire de la genAI.

Ce script prend en entrée un nom de fichier, qui est au format MarkDown.

Je veux un script Python, pour la transformation des titres d'un document en chunks.
J'ai déjà un script nommé create_chunks.py, qui traite le texte du fichier et non les titres (les metadata sont constituées notamment des différents niveaux de titres associés à chaque texte encapsulé dans un chunk).

Je veux maintenant indexer les niveaux de titres indépendamment des chunks associés.
Je veux donc un nouveau script, qui va créer un chunk par titre, quel que soit son niveau, le text associé au chunk étant alors ce titre. Il le fera quelque soit le niveau de titre, mais en conservant l'information de ce niveau en metadata.

Le fichier est parsé pour créer des chunks qui seront envoyés, via un autre script, dans une base Weaviate, dans une autre collection que celle utilisée par le script create_chunks.py.
Les chunks n'ont ici pas de limite de taille.

Les metadata de contexte des chunks comprennent :
  - les mots clés importants du titre dans text ;
  - les différents niveaux de titres qui aboutissent au titre de ce chunk, sous le même format que ce qui est fait dans create_chunks.py.
  
Je ne veux pas d'autres raffinements.

Le nom de fichier de sortie contenant les chunks est composé du nom de fichier d'entrée auquel on ajoute le suffixe "headings.chunks.jq".
Le script affiche le nom du fichier produit.

Voici un exemple de chunk attendu pour le titre "## Généralités" :
  "chunk_id": "CCTP2.docx-headings-673",
  "text": "Généralités",
  "metadata": {
    "headings": {
      "h1": "Généralités du système",
      "h2": "Liste des annexes",
      "h3": "Annexes principales"
    },
    "heading_level": 2,
    "keywords": [
      "général",
      "système"
    ]
  },
  "approx_tokens": 169
}

Comme tu peux le remarquer, le nombre approximatif de tokens correspondant au contenu de text, c'est à dire au titre considéré dans ce chunk, est aussi évalué et présent dans le chunk produit. Le chunk_id est constitué du nom du fichier d'entrée suivi de "-headings-", suivi du numéro de chunk. Et le niveau de heading est conservé dans "heading_level".
